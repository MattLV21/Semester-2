Give a complete problem formulation for each of the following problems. Choose a formulation
that is precise enough to be implemented.

Problem formulation:
    - State space   (all posiable states)
    - Initial state (the state were we start)
    - Goal state(s) (where we want to do/end)
    - Transition model  (What action each state can do and what it does)
    - Cost model    (How good each action is)

(a) There are six glass boxes in a row, each with a lock. Each of the first five boxes holds a key
unlocking the next box in line; the last box holds a banana. You have the key to the first box,
and you want the banana.

Our solution to the problem:
    - State space: A list of keys and a banana.
    - Initial state: A key.
    - Goal state: Have a banana.
    - Transition model: Use a key to open a new box.
    - Cost model: All actions cost something... times key used.
Luis' solution:
    - State space: 0, 1, 2, 3, 4, 5, 6
    - Initial state: 0
    - Goal state: 6
    - Transition model: +1
    - Cost model: 1

(b) You start with the sequence ABABAECCEC, or in general any sequence made from A, B, C,
and E. You can transform this sequence using the following equalities: AC = E, AB = BC,
BB = E, and Ex = x for any x. For example, ABBC can be transformed into AEC, and then
AC, and then E. Your goal is to produce the sequence E.

    - State space: {A, B, C, E}*.
    - Initial state: "ABABAECCEC".
    - Goal state(s): "E".
    - Transition model: Use one rules on the String.
    - Cost model: 1 per action.

__________________Problem 2____________________

A robot has the task of navigating out of a maze. The robot starts in the center of the maze facing
north. It can turn to face north, east, south, or west. The robot can also move forward a certain
distance, although it will stop before hitting a wall.

(a) Formulate this problem. How large is the state space?
    - State space: All posiable positions and orientation..
    - Initial state: center of the maze facing north.
    - Goal state(s): With the exit and facing the exit.
    - Transition model: 
        Rotation -> face the dicered orientation.
        move X distance -> move x positions or until wall.
    - Cost model: X for moving X positions + 1 for rotation.
Size of state space, all positions*4...
all positions and all rotations.

(b) In navigating a maze, the only place we need to turn is at the intersection of two or more
corridors. Reformulate this problem using this observation. How large is the state space now?

- State space: All posiable positions* and orientation and Initial state (and goal state). 
* Intersection of two or more corridors.
- Initial state: center of the maze facing north.
- Goal state(s): With the exit and facing the exit.
- Transition model: 
    Rotation -> face the dicered orientation.
    Move to next intersection of two or more corridors.
Cost model: distance + rotation

Size of state space, positions of intersection of two or more corridors times 4
positions of intersection of two or more corridors and the four rotations.


(c) From each point in the maze, we can move in any of the four directions until we reach a
turning point, and this is the only action we need to do. Reformulate the problem using these
actions. Do we need to keep track of the robotâ€™s orientation now?

(d) In our initial description of the problem we already abstracted from the re